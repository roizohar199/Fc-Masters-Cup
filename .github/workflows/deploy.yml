name: Deploy

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install root deps
        run: npm ci

      - name: Install server deps
        working-directory: server
        run: npm ci

      - name: Install client deps
        working-directory: client
        run: npm ci

      - name: Build server
        working-directory: server
        run: npm run build

      - name: Build client
        working-directory: client
        run: npm run build

      - name: Prepare artifact
        run: |
          rm -rf artifact && mkdir -p artifact/server artifact/client
          cp -r server/dist artifact/server/dist
          cp server/package.json artifact/server/package.json
          if [ -f server/package-lock.json ]; then cp server/package-lock.json artifact/server/package-lock.json; fi
          cp -r client/dist artifact/client/dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fcmasters-build
          path: artifact

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: fcmasters-build
          path: artifact

      - name: Deploy to VPS
        env:
          SSH_HOST_EFF: ${{ secrets.SSH_HOST_EFF }}
          SSH_USER_EFF: ${{ secrets.SSH_USER_EFF }}
          SSH_PORT_EFF: ${{ secrets.SSH_PORT_EFF }}
          DEPLOY_PATH_EFF: ${{ secrets.DEPLOY_PATH_EFF }}
        run: |
          set -euo pipefail
          HOST="$SSH_HOST_EFF"
          USER="$SSH_USER_EFF"
          PORT="${SSH_PORT_EFF:-22}"
          APP_DIR="$DEPLOY_PATH_EFF"

          # גיבוי מהיר לפני עדכון
          ssh -p "$PORT" "$USER@$HOST" "cd '$APP_DIR' && cp -r server server.backup.$(date +%s) || true"
          
          # העלאה ישירה לתיקיית הפרויקט
          rsync -az -e "ssh -p $PORT" --delete ./artifact/ "$USER@$HOST:$APP_DIR/"

          # התקנת תלויות production
          ssh -p "$PORT" "$USER@$HOST" bash -lc "
            set -e
            cd '$APP_DIR/server'
            if [ -f package-lock.json ]; then
              npm ci --omit=dev --no-audit --fund=false
            else
              npm install --omit=dev --no-audit --fund=false
            fi

            # הפעלה מחדש
            if command -v pm2 >/dev/null 2>&1; then
              pm2 restart fcmasters --update-env || pm2 start dist/index.js --name fcmasters
              pm2 save || true
            elif command -v systemctl >/dev/null 2>&1; then
              sudo systemctl restart fcmasters
            fi
          "
name: Build and Deploy

on:
  push:
    branches: [ "**" ]   # נריץ build על כל ענף
  workflow_dispatch:
    inputs:
      force_deploy:
        description: "Run deploy even if not on main?"
        required: false
        default: "false"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            server/package-lock.json
            client/package-lock.json

      # אופציונלי – אם יש תלות בשורש
      - name: Install root deps
        if: ${{ hashFiles('package-lock.json') != '' }}
        run: npm ci --no-audit --fund=false

      - name: Install server dependencies
        working-directory: server
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --fund=false
          else
            npm install --no-audit --fund=false
          fi

      - name: Install client dependencies
        if: ${{ hashFiles('client/package.json') != '' }}
        working-directory: client
        env:
          NPM_CONFIG_OPTIONAL: "true"
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --fund=false
          else
            npm install --no-audit --fund=false
          fi

      - name: Verify server tree
        working-directory: server
        run: npm ls >/dev/null

      - name: Verify client tree
        if: ${{ hashFiles('client/package.json') != '' }}
        working-directory: client
        run: npm ls >/dev/null

      - name: Build server
        working-directory: server
        run: npm run build

      - name: Build client
        working-directory: client
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fcmasters-build
          path: |
            server/dist/
            client/dist/
            package.json
            server/package.json
            server/package-lock.json
            .env.example
          retention-days: 7

  deploy:
    name: Deploy to VPS
    needs: build
    runs-on: ubuntu-latest
    # רץ אם ה-build הצליח וגם:
    # - אנחנו על main/master, או
    # - הופעל ידנית וביקשנו force_deploy=true
    if: >
      needs.build.result == 'success' && (
        github.ref_name == 'main' ||
        github.ref_name == 'master' ||
        (github.event_name == 'workflow_dispatch' && inputs.force_deploy == 'true')
      )
    
    env:
      SSH_PRIVATE_KEY_EFF: ${{ secrets.VPS_SSH_KEY }}
      SSH_HOST_EFF:        ${{ secrets.VPS_HOST }}
      SSH_USER_EFF:        ${{ secrets.VPS_USER }}
      SSH_PORT_EFF:        ${{ secrets.VPS_PORT != '' && secrets.VPS_PORT || '22' }}
      DEPLOY_PATH_EFF:     ${{ secrets.DEPLOY_PATH  != '' && secrets.DEPLOY_PATH  || '/var/www/fcmasters' }}
    
    steps:
      - name: Debug context
        run: |
          echo "event_name=${{ github.event_name }}"
          echo "ref=${{ github.ref }}"
          echo "ref_name=${{ github.ref_name }}"
          echo "base_ref=${{ github.base_ref }}"
          echo "head_ref=${{ github.head_ref }}"
          echo "force_deploy=${{ inputs.force_deploy }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: fcmasters-build
          path: ./artifact

      # ===== אבטחה: אימות סודות =====
      - name: ✅ Validate required secrets (VPS_*)
        run: |
          echo "Validating deployment secrets..."
          [ -n "${SSH_PRIVATE_KEY_EFF}" ] || { echo "❌ Missing VPS_SSH_KEY"; exit 1; }
          [ -n "${SSH_HOST_EFF}" ]        || { echo "❌ Missing VPS_HOST"; exit 1; }
          [ -n "${SSH_USER_EFF}" ]        || { echo "❌ Missing VPS_USER"; exit 1; }
          echo "✅ Secrets OK."
        shell: bash

      # ===== טעינת המפתח ל-agent =====
      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ env.SSH_PRIVATE_KEY_EFF }}

      - name: Add VPS host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ env.SSH_PORT_EFF }}" "${{ env.SSH_HOST_EFF }}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          echo "✅ Host ${{ env.SSH_HOST_EFF }} added to known_hosts"
        shell: bash

      # ===== דפלוי אטומי =====
      - name: Deploy to VPS (rsync + atomic release)
        env:
          HOST: ${{ env.SSH_HOST_EFF }}
          USER: ${{ env.SSH_USER_EFF }}
          PORT: ${{ env.SSH_PORT_EFF }}
          APP_DIR: ${{ env.DEPLOY_PATH_EFF }}
          RUN: ${{ github.run_number }}
        run: |
          set -euo pipefail
          RELEASE_DIR="${APP_DIR}/releases/${RUN}"
          ssh -p "$PORT" "$USER@$HOST" "mkdir -p '$RELEASE_DIR'"
          rsync -az -e "ssh -p $PORT" --delete ./artifact/ "$USER@$HOST:$RELEASE_DIR/"
          ssh -p "$PORT" "$USER@$HOST" bash -lc "
            set -e
            cd '$APP_DIR'
            ln -sfn 'releases/${RUN}' current
            if command -v pm2 >/dev/null 2>&1; then
              pm2 reload fcmasters || pm2 start current/server/dist/index.js --name fcmasters
            elif command -v systemctl >/dev/null 2>&1; then
              sudo systemctl reload fcmasters || sudo systemctl restart fcmasters
            fi
          "
        shell: bash
